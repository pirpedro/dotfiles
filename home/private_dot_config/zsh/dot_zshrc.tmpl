# shellcheck shell=bash
# Generated by chezmoi â€” do not edit this file directly.
# Sources: .chezmoitemplates/shell/bash/*.bash
# Disabled markers:
#   - filename ends with ".disabled"
#   - file content contains "# @disabled"

# base POSIX comum
. "$HOME/.config/shell/lib/bootstrap.sh"

{{- $src := .chezmoi.sourceDir -}}
{{- $absPattern := joinPath $src ".chezmoitemplates/shell/zsh/*.zsh" -}}
{{- $files := (glob $absPattern | sortAlpha) -}}

{{- range $f := $files -}}
  {{- $name := lower $f -}}
  {{- $isLinux  := contains "linux"  $name -}}
  {{- $isDarwin := contains "darwin" $name -}}
  {{- $isDisabledName := contains ".disabled." $name -}}

  {{- $bn := base $f -}}
  {{- $content := include $f -}}
  {{- if not $isDisabledName }}
    {{- if or
          (and $isLinux  (eq $.chezmoi.os "linux"))
          (and $isDarwin (eq $.chezmoi.os "darwin"))
          (and (not $isLinux) (not $isDarwin))
        }}
{{ includeTemplate $f $ | trim }}
    {{- end }}
  {{- end }}
{{- end }}

if command_exists oh-my-posh ; then
  eval "$(oh-my-posh init zsh --config $XDG_CONFIG_HOME/ohmyposh/theme.toml)"
fi

if command_exists zoxide; then
   eval "$(zoxide init zsh --cmd z)"   # usa 'z' como comando
  alias j='z'                         # compatibilidade com o 'j' do fasd/prezto
fi

if command_exists direnv ; then
  eval "$(direnv hook zsh)"
fi

if [ $commands[kubectl] ]; then source <(kubectl completion zsh); fi
#fpath=(~/development/workspace/my-config/contrib/completion
#       $fpath)

# alias
alias k=kubectl
compdef __start_kubectl k




# source_dir "$XDG_CONFIG_HOME/zsh/zshrc.d"

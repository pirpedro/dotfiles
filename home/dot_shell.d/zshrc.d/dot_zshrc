#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

#if zsh didn't find anything in a glob expansion it will not show errors.

export ZDOTDIR=~/.shell.d/zshrc.d
# Source Prezto.
if [[ -s "$HOME/.local/share/zprezto/init.zsh" ]]; then
  source "$HOME/.local/share/zprezto/init.zsh"
fi

# load all files from .shell/rc.d directory
if [ -d $HOME/.shell.d/rc.d ]; then
  for file in $HOME/.shell.d/rc.d/*.sh(N); do
    source $file
  done
fi

# load all files from .shell.d/zshrc.d directory
if [ -d $HOME/.shell.d/zshrc.d ]; then
  for file in $HOME/.shell.d/zshrc.d/*.zsh(N); do
    source $file
  done
fi

# environment

# export CLICOLOR=1
# export TERM=xterm-256color
# export GPG_TTY=$(tty)
# export MY_CONFIG_PATH=~/dev/ws/my-config
#export PYTHONPATH=/usr/local/lib/python2.7/site-packages:$PYTHONPATH

# if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# completion

if [ $commands[kubectl] ]; then source <(kubectl completion zsh); fi
#fpath=(~/development/workspace/my-config/contrib/completion 
#       $fpath)

#show completion menu when number of options is at least 2
zstyle ':completion:*' menu select=2

# alias
alias k=kubectl
compdef __start_kubectl k

#OSX only

if [[ "$OSTYPE" == "darwin"* ]]; then
  alias showFiles='defaults write com.apple.finder AppleShowAllFiles YES; killall Finder /System/Library/CoreServices/Finder.app'
  alias hideFiles='defaults write com.apple.finder AppleShowAllFiles NO; killall Finder /System/Library/CoreServices/Finder.app'
  fpath=($(brew --prefix)/share/zsh-completions
       $(brew --prefix)/share/zsh/site-functions
       $fpath)

fpath=(/usr/local/share/zsh-completions $fpath)

fi

# Linux only

#if [[ "$OSTYPE" == "linux-gnu" ]]; then
 
#fi


######################   zsh configuration script   ######################
fpath=(${MY_CONFIG_PATH:-/usr/local/my-config}/contrib/completion $fpath)
if [[ "$OSTYPE" == "darwin"* ]]; then
  fpath=($(brew --prefix)/share/zsh-completions
  $(brew --prefix)/share/zsh/site-functions
  $fpath)
fi

[[ -e ~/.myenv/path ]] && emulate sh -c 'source ~/.myenv/path'
[[ -e ~/.myenv/profile.sh ]] && emulate sh -c 'source ~/.myenv/profile.sh'
[[ -e ~/.myenv/config.sh ]] && emulate sh -c 'source ~/.myenv/config.sh'
[[ -e ~/.myenv/aliases.sh ]] && emulate sh -c 'source ~/.myenv/aliases.sh'
##########################################################################
###############   my-project wrapper script   ###############
my() {
  local newPath
  if [[ "$1" == "project" ]]; then
    if /usr/bin/env my project path "$2" > /dev/null 2>&1; then
      newPath="$(/usr/bin/env my project path $2)"
    if [ -d "$newPath" ]; then
        cd "$newPath" || return 1
      else
        echo "Project $2 folder doesn't exist."
        return 1
      fi
    fi
  fi
  /usr/bin/env my "$@"
  return $?
}
##################################################################

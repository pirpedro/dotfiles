{{/* personal machine information */}}
{{- $personalName := "Pedro Rodrigues" -}}
{{- $personalEmail := "pir.pedro@gmail.com" -}}
{{- $personalSigningKey := "59451A325CE1E195" -}}

{{- $workSigningKey := "426C5F3386CEEC28" -}}
{{- $workName := "Pedro Ivo Rodrigues" -}}
{{- $workEmail := "pir.pedro@gmail.com" -}}

{{- $isWork := contains "-work" (lower .chezmoi.hostname) -}}
{{- $isPersonal := not $isWork -}}

{{- $osID := .chezmoi.os -}}
{{- $osIDLike := ""}}

{{- if hasKey .chezmoi.osRelease "id" -}}
{{-   $osID = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.id -}}
{{-   $osIDLike = .chezmoi.osRelease.id }}
{{- end -}}

{{- if hasKey .chezmoi.osRelease "idLike" }}
{{-   $osIDLike = .chezmoi.osRelease.idLike }}

{{- end -}}

{{/* boolean feature tags */}}
{{- $isWsl := or (env "WSL_DISTRO_NAME") (env "IS_WSL") | not | not -}}
{{- $isFedora := lookPath "gnome-shell" | not | not -}}
{{- $ephemeral := false -}}{{/* true if this machine is ephemeral, e.g. a cloud or VM instance */}}
{{- $headless := false -}}{{/* true if this machine does not have a screen and keyboard */}}

{{/* detect GitHub codespaces, VSCode remote containers, Docker containers, Multipass VMs, and Vagrant boxes */}}
{{- if or (env "CODESPACES") (lookPath "/.dockerenv") (env "REMOTE_CONTAINERS_IPC") (eq .chezmoi.username "root" "ubuntu" "vagrant" "vscode") -}}
{{-   $ephemeral = true -}}
{{-   $headless = true -}}
{{- end -}}

{{- if eq .chezmoi.os "windows" -}}
{{-   $ephemeral = true -}}
{{- end -}}

{{/* environmental tags */}}
{{- $editor := "vim" }}
{{- $visual := "" }}
{{- $desktop_environment := env "XDG_CURRENT_DESKTOP" }}
{{- if $desktop_environment }}
{{-   $desktop_environment = (split ":" $desktop_environment)._1 | lower }}
{{- else }}
{{-   $desktop_environment = "" | quote }}
{{-   $headless = true }}
{{- end }}

{{- if lookPath "vim" }}
  {{- $editor = "vim" }}
{{- else if lookPath "nano" }}
  {{- $editor = "nano" }}
{{- end }}

{{- if lookPath "code" }}
  {{- $visual = "code" }}
{{- else }}
  {{- $visual = $editor }}
{{- end }}

{{ $sudo := "sudo" -}}
{{ if eq .chezmoi.username "root" -}}
{{ $sudo = "" -}}
{{ end -}}

{{ $update_cmd :="" -}}
{{ $upgrade_cmd :="" -}}
{{ $install_cmd := "" -}}

{{- if eq .chezmoi.os "darwin" }}

{{-   $update_cmd ="brew update" }}
{{-   $upgrade_cmd ="brew update && brew upgrade" }}
{{-   $install_cmd ="brew install" }}

{{- else if eq .chezmoi.os "linux" }}

{{-   if eq $osIDLike "debian" }}
{{-   $update_cmd = "apt -qq -y update" }}
{{-   $upgrade_cmd =printf "%s apt update && %s apt upgrade -y" $sudo $sudo | trim }}
{{-   $install_cmd ="apt -qq -y install" }}

{{-   else if eq $osIDLike "alpine" }}
{{-   $update_cmd ="apk update" }}
{{-   $upgrade_cmd =printf "%s apk update && %s apk upgrade" $sudo $sudo | trim }}
{{-   $install_cmd ="apk add" }}

{{-   else if eq $osIDLike "suse" }}
{{-   $update_cmd ="zypper refresh" }}
{{-   $upgrade_cmd =printf "%s zypper update" $sudo | trim }}
{{-   $install_cmd ="zypper in" }}

{{-   else if eq $osIDLike "gentoo" }}
{{-   $update_cmd ="emerge -u world" }}
{{-   $upgrade_cmd =printf "%s emerge -u world" $sudo | trim }}
{{-   $install_cmd ="emerge -av" }}

{{-   else if eq $osIDLike "fedora" }}
{{-   $update_cmd ="dnf check-update" }}
{{-   $upgrade_cmd =printf "%s dnf upgrade" $sudo | trim }}
{{-   $install_cmd ="dnf install" }}

{{-   else if eq $osIDLike "centos" }}
{{-   $update_cmd ="yum check-update" }}
{{-   $upgrade_cmd =printf "%s yum update" $sudo | trim }}
{{-   $install_cmd ="yum install" }}

{{-   else if eq $osIDLike "arch" }}
{{-   $update_cmd ="pacman -Syy" }}
{{-   $upgrade_cmd =printf "%s pacman -Syu" $sudo | trim }}
{{-   $install_cmd ="pacman -S" }}

{{-   end }}
{{ $update_cmd =printf "%s %s" $sudo $update_cmd | trim -}}
{{ $install_cmd =printf "%s %s" $sudo $install_cmd | trim -}}
{{- end }}

sourceDir: {{ .chezmoi.sourceDir | quote }}

data:
  personal:
    name: {{ $personalName | quote }}
    email: {{ $personalEmail | quote }}
    signing_key: {{ $personalSigningKey | quote }}
  work: 
    name: {{ $workName | quote }}
    email: {{ $workEmail | quote }}
    signing_key: {{ $workSigningKey | quote }}
  is:
    personal: {{ $isPersonal }}
    work: {{ $isWork }}
    wsl: {{ $isWsl }}
    ephemeral: {{ $ephemeral }}
    headless: {{ $headless }}
  path:
    node:
      global: {{ .chezmoi.homeDir }}/.local/share/npm
  cmd:
    sudo: {{ $sudo }}
    os:
      update: {{ $update_cmd }}
      upgrade: {{ $upgrade_cmd }}
      install: {{ $install_cmd }}
    bat: {{ ternary "batcat" "bat" (eq $osIDLike "debian" )}}
    node:
      install: npm install -g --prefix {{ .chezmoi.homeDir }}/.local/share/npm
    python:
      install: pip3 install --user
  env:
    de: {{ $desktop_environment }}
  github:
  {{- if $isPersonal }}
    name: {{ $personalName | quote }}
    email: {{ $personalEmail | quote }}
    signing_key: {{ $personalSigningKey | quote }}

  {{- else }}
    name: {{ $workName | quote }}
    email: {{ $workEmail | quote }}
    signing_key: {{ $workSigningKey | quote }}
  {{- end }}

  editor:
    terminal: {{ $editor | quote }}
    gui: {{ $visual | quote }}
  locale: "en_US.UTF-8"
  language: "en_US.UTF-8"

  browser: "google-chrome"
  osid: {{ $osID | quote }}
  osidlike: {{ $osIDLike | quote }}

diff:
  exclude: ["scripts"]
  
template:
  options: ["missingkey=zero"]
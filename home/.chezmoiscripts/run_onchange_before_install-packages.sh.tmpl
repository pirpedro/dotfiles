{{ $install := list
     "curl"
     "wget"
     "libarchive-tools:bsdtar"
     "vim"
     "git"
     "git-extras:git-bulk"
     "zsh"
     "progress"
     (printf "bat:%s" .cmd.bat)
     "htop"
     "fzf"
     "ranger"
     "ripgrep:rg"
     "jq"
     "yq"
     "lnav"
     "imagemagick:convert"
     "mitmproxy"
     "httpie:http" 
     "neofetch" -}}

{{ if not .is.ephemeral -}}
  {{ $install = concat $install (list
    "node"
    "docker"
    "nmap"
    "pandoc"
    "asciinema"
  ) -}}
  
  {{ if .is.personal -}}
     {{ $install = concat $install (list 
        "bitwarden:bw"
        "delta"
        "github:gh"
        "youtube-dl"
      ) -}}
  {{ end -}}
{{ end -}}

{{ if not .is.headless -}}
   {{ $install = concat $install (list
    "sushi"
    "neovim:nvim"
    "vscode:code"
    "google-chrome"
    "xclip"
    "kitty"
    "etcher"
    "ulauncher"
  ) -}}

  {{ if eq .env.de "gnome" -}}
        {{ $install = concat $install (list
            "gnome-tweaks"
            "gnome-shell-extension-installer"
          ) -}} 
    {{ end -}}
{{ end -}}

{{ if and (ne .chezmoi.username "root") (not .is.ephemeral) -}}
    {{ $install = mustAppend $install "sudo" -}}
{{ end -}}

{{ $packages := list -}}
{{ $scripts := list -}}
{{ $name := "" -}}
{{ $cmd := "" -}}
{{ range $install -}}
{{   $i := split ":" . -}}
{{   $name = $i._0 -}}
{{   $cmd = $i._0 -}}
{{   if $i._1 -}}
{{     $cmd = $i._1 -}}
{{   end -}}
{{   if not (lookPath $cmd) -}}
{{     if stat (printf "%s/.chezmoitemplates/packages/%s.sh" $.chezmoi.sourceDir $name) -}}
{{       $scripts = mustAppend $scripts $name -}}
{{     else -}}
{{       $packages = mustAppend $packages $name -}}          
{{     end -}}
{{   end -}}
{{ end -}}


{{ if eq .chezmoi.os "darwin" "linux" -}}
#!/bin/bash
{{   if eq .chezmoi.os "darwin" -}}
xcode-select --install
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
{{ .cmd.install }} bash-completion@2
{{    end -}}

{{   if eq .osidlike "debian" -}}
export DEBIAN_FRONTEND=noninteractive
{{   end -}}
set -eufo pipefail
echo "Bootstrapping system..."
{{ .cmd.update }}
{{   if $packages -}} 
{{ .cmd.install }} {{ $packages | join " " }}
{{   end -}}
{{ .cmd.sudo }} chsh -s $(which zsh) $(whoami)

{{-   range $scripts }}
echo "Installing {{ . }}...";
{{- /* Workaroud to handle the problem related to template function only accepting static string as arguments*/ -}}
{{- /* So invoking the chezmoi command allows to pass a dynamic location to be parsed */ -}}
{{ output "chezmoi" "execute-template" (include (printf ".chezmoitemplates/packages/%s.sh" . )) -}}
echo "{{ . }} installed.";
{{-   end }}
{{ end -}}

